{"version":3,"file":"static/js/928.c04fce1c.chunk.js","mappings":"oRAaIA,EAAMC,EAAAA,GAAAA,IAAH,6CAGHC,EAAQD,EAAAA,GAAAA,GAAH,gEAEM,SAAAE,GAAK,OAAIA,EAAMC,SA6F9B,SAASC,EAAWF,GAMlB,OAJAG,EAAAA,EAAAA,YAAU,WACRH,EAAMI,cAAa,MAGH,IAAdJ,EAAMK,KACD,yBAAMC,EAAAA,EAAKN,EAAMO,KAAKC,IAAIC,OACV,IAAdT,EAAMK,KACR,yBAAMC,EAAAA,EAAKN,EAAMO,KAAKC,IAAIE,aAD5B,EA8CT,OAAeC,EAAAA,EAAAA,KAPf,SAAmBC,GACf,MAAO,CACLC,UAAYD,EAAME,QAClBC,UAAYH,EAAMI,YAIxB,EA9IA,SAAoBhB,GAGhB,OAA4BiB,EAAAA,EAAAA,WAAS,GAArC,eAIA,GAJA,WAEeC,EAAAA,EAAAA,YAAWC,EAAAA,IAENF,EAAAA,EAAAA,UAAS,IAA7B,eAAKZ,EAAL,KAAUe,EAAV,KACA,GAAgCH,EAAAA,EAAAA,WAAS,GAAzC,eAAKI,EAAL,KAAgBjB,EAAhB,KACA,GAAoCa,EAAAA,EAAAA,UAASK,KAAKC,MAAMC,aAAaC,QAAQ,aAA7E,0BAIAtB,EAAAA,EAAAA,YAAU,WAKN,IAAIuB,EAAQC,YAAW,WAAMC,UAAS,KAAS,KAC/C,OAAO,WAAQC,aAAaH,MAC7B,CAACI,SAEJ3B,EAAAA,EAAAA,YAAU,WACR,IAAI4B,EAAMP,aAAaC,QAAQ,YAE7BM,EADU,OAARA,EACI,GAEAT,KAAKC,MAAMQ,IAEfC,KAAKxB,GACTuB,EAAM,IAAIE,IAAIF,GACdA,GAAG,OAAOA,GAEVP,aAAaU,QAAQ,UAAWZ,KAAKa,UAAUJ,MAC9C,IAGH,IAAMvB,GAAO4B,EAAAA,EAAAA,MAAP5B,GACF6B,GAAUC,EAAAA,EAAAA,MACVC,EAAQvC,EAAMwC,QAAQC,MAAK,SAAAC,GAAI,OAAIA,EAAKlC,IAAMA,KAElD,OACI,iBAAKmC,UAAU,YAAf,WACA,SAAC9C,EAAD,WACI,SAACE,EAAD,CAAO4C,UAAU,MAAjB,gDAKJ,iBAAKA,UAAU,MAAf,WACI,gBAAKA,UAAU,WAAf,UACI,gBAAKC,IAAK,gDAAiDL,EAAM/B,GAAG,GAAI,OAAQqC,MAAM,WAE1F,iBAAKF,UAAU,gBAAf,WACI,eAAIA,UAAU,OAAd,SAAsBJ,EAAMO,SAC5B,uBAAIP,EAAMQ,WACV,cAAGC,KAAM1C,EAAAA,EAAKiC,EAAM/B,IAAIyC,IAAKC,OAAO,SAApC,UACE,mBAAQP,UAAU,iBAAlB,yCAEF,mBAAQA,UAAU,iBAAiBQ,QAAS,WAC1Cd,EAAQL,KAAK,MADf,6CAMR,UAACoB,EAAA,EAAD,CAAKT,UAAU,OAAOU,QAAQ,OAAOC,iBAAiB,SAAtD,WACE,SAACF,EAAA,OAAD,WACI,SAACA,EAAA,OAAD,CAAUG,SAAS,SAASJ,QAAS,WACnC/C,GAAa,GACbgB,EAAO,IAFT,gDAKJ,SAACgC,EAAA,OAAD,WACI,SAACA,EAAA,OAAD,CAAUG,SAAS,SAASJ,QAAS,WACnC/C,GAAa,GACbgB,EAAO,IAFT,mDAON,SAACoC,EAAA,EAAD,CAAeC,GAAIpC,EAAWqC,WAAW,MAAMC,QAAS,IAAxD,UACE,SAACzD,EAAD,CAAYG,IAAKA,EAAKD,aAAcA,EAAcG,KAAMgC","sources":["Detail.js"],"sourcesContent":["/* eslint-disable */\r\n\r\nimport axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport './Detail.scss'\r\nimport {ItemContext} from './App.js'\r\nimport { Nav } from 'react-bootstrap';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport Data from './data.js'\r\n\r\nlet Box = styled.div`\r\n    padding : 20px;\r\n`\r\nlet Title = styled.h4`\r\n    font-size : 25px;\r\n    color : ${ props => props.color }\r\n`\r\n\r\n\r\n\r\nfunction DetailPage(props) {\r\n    \r\n\r\n    let [soldOut, setSoldOut] = useState(true)\r\n    // 다른 js 파일로 useContext 실행한 테스트\r\n    let testItem = useContext(ItemContext)\r\n\r\n    let [tap, setTap] = useState(0)\r\n    let [swicthBtn, setSwicthBtn] = useState(false)\r\n    let [storageItem, setStorageItem] = useState(JSON.parse(localStorage.getItem('watched')))\r\n    \r\n\r\n    // DetailPage 등장할때 실행\r\n    useEffect(() => {\r\n\r\n        // axios.get() -> DetailPage 가 등장했을때 ajax 요청\r\n        // 끝에 빈 대괄호 써줘야함.\r\n\r\n        let timer = setTimeout(()=> {setAlert(false)}, 2000)\r\n        return () => { clearTimeout(timer) }\r\n    }, [alert]) // -> alert 라는 state가 update 할때만 useEffect 실행\r\n\r\n    useEffect(() => {\r\n      let arr = localStorage.getItem('watched')\r\n      if (arr === null) {\r\n        arr = []\r\n      } else {\r\n        arr = JSON.parse(arr)\r\n      }\r\n      arr.push(id)\r\n      arr = new Set(arr)\r\n      arr = [...arr]\r\n\r\n      localStorage.setItem('watched', JSON.stringify(arr))\r\n    }, [])\r\n\r\n\r\n    let { id } = useParams()\r\n    let history = useHistory()\r\n    let c_pro = props.product.find(item => item.id == id)\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n        <Box>\r\n            <Title className='red'>작업물 상세</Title>\r\n            {/* <Title color='blue'>제품 상세</Title>\r\n            <Title color='blue'>제품 상세</Title> */}\r\n        </Box>\r\n        \r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <img src={\"https://dongmyounglee.github.io/port/project\"+ (c_pro.id+1) +\".png\"} width=\"90%\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-4\">\r\n                <h4 className=\"pt-5\">{c_pro.title}</h4>\r\n                <p>{c_pro.content}</p>\r\n                <a href={Data[c_pro.id].url} target=\"_blank\">\r\n                  <button className=\"btn btn-danger\">바로가기</button>\r\n                </a>\r\n                <button className=\"btn btn-danger\" onClick={() => {\r\n                  history.push('/')\r\n                }}>뒤로가기</button>\r\n            </div>\r\n            \r\n        </div>\r\n        <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n          <Nav.Item>\r\n              <Nav.Link eventKey=\"link-0\" onClick={() => {\r\n                setSwicthBtn(false)\r\n                setTap(0)\r\n              }}>작업물 설명</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n              <Nav.Link eventKey=\"link-1\" onClick={() => {\r\n                setSwicthBtn(false)\r\n                setTap(1)\r\n              }}>적용한 기술</Nav.Link>\r\n          </Nav.Item>\r\n        </Nav> \r\n        \r\n        <CSSTransition in={swicthBtn} classNames=\"wow\" timeout={500}>\r\n          <TapContent tap={tap} setSwicthBtn={setSwicthBtn} cPro={c_pro}/>\r\n        </CSSTransition>\r\n        \r\n    </div>\r\n    )   \r\n}\r\n\r\nfunction TapContent(props) {\r\n  \r\n  useEffect(() => {\r\n    props.setSwicthBtn(true)\r\n  })\r\n\r\n  if (props.tap === 0) {\r\n    return <div>{Data[props.cPro.id].info}</div>\r\n  } else if (props.tap === 1) {\r\n    return <div>{Data[props.cPro.id].info2}</div>\r\n  }\r\n}\r\n\r\nfunction Info(props) {\r\n    return (\r\n        <p>재고 : {props.item} 개</p>\r\n    )\r\n}\r\n\r\nfunction SoldOut() {\r\n    return (\r\n        <p>품절 입니다.</p>\r\n    )\r\n}\r\n\r\nfunction InfoMessage() {\r\n    return (\r\n        <div className=\"my-alert\">\r\n            <p>즉시 출고 가능 재고 2 개 남았습니다.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n// class DetailPage2 extends React.Component {\r\n    \r\n//     // 렌더링 될때\r\n//     componentDidMount() {\r\n\r\n//     }\r\n\r\n//     // 사라질 때\r\n//     componentWillUnmount() {\r\n\r\n//     }\r\n// }\r\n\r\n\r\nfunction storeData(state) {\r\n    return {\r\n      stateData : state.reducer,\r\n      alertOpen : state.reducer2\r\n    }\r\n  }\r\n  \r\nexport default connect(storeData)(DetailPage)"],"names":["Box","styled","Title","props","color","TapContent","useEffect","setSwicthBtn","tap","Data","cPro","id","info","info2","connect","state","stateData","reducer","alertOpen","reducer2","useState","useContext","ItemContext","setTap","swicthBtn","JSON","parse","localStorage","getItem","timer","setTimeout","setAlert","clearTimeout","alert","arr","push","Set","setItem","stringify","useParams","history","useHistory","c_pro","product","find","item","className","src","width","title","content","href","url","target","onClick","Nav","variant","defaultActiveKey","eventKey","CSSTransition","in","classNames","timeout"],"sourceRoot":""}