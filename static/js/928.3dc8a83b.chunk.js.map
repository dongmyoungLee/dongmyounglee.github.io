{"version":3,"file":"static/js/928.3dc8a83b.chunk.js","mappings":"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","sources":["Detail.js"],"sourcesContent":["/* eslint-disable */\r\n\r\nimport axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport './Detail.scss'\r\nimport {ItemContext} from './App.js'\r\nimport { Nav } from 'react-bootstrap';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\n\r\nlet Box = styled.div`\r\n    padding : 20px;\r\n`\r\nlet Title = styled.h4`\r\n    font-size : 25px;\r\n    color : ${ props => props.color }\r\n`\r\n\r\n\r\n\r\nfunction DetailPage(props) {\r\n    \r\n    let [alert, setAlert] = useState(true)\r\n    let [soldOut, setSoldOut] = useState(true)\r\n    // 다른 js 파일로 useContext 실행한 테스트\r\n    let testItem = useContext(ItemContext)\r\n\r\n    let [tap, setTap] = useState(0)\r\n    let [swicthBtn, setSwicthBtn] = useState(false)\r\n    let [storageItem, setStorageItem] = useState(JSON.parse(localStorage.getItem('watched')))\r\n    \r\n\r\n    // DetailPage 등장할때 실행\r\n    useEffect(() => {\r\n\r\n        // axios.get() -> DetailPage 가 등장했을때 ajax 요청\r\n        // 끝에 빈 대괄호 써줘야함.\r\n\r\n        let timer = setTimeout(()=> {setAlert(false)}, 2000)\r\n        return () => { clearTimeout(timer) }\r\n    }, [alert]) // -> alert 라는 state가 update 할때만 useEffect 실행\r\n\r\n    useEffect(() => {\r\n      let arr = localStorage.getItem('watched')\r\n      if (arr === null) {\r\n        arr = []\r\n      } else {\r\n        arr = JSON.parse(arr)\r\n      }\r\n      arr.push(id)\r\n      arr = new Set(arr)\r\n      arr = [...arr]\r\n\r\n      localStorage.setItem('watched', JSON.stringify(arr))\r\n    }, [])\r\n\r\n\r\n    let { id } = useParams()\r\n    let history = useHistory()\r\n    let c_pro = props.product.find(item => item.id == id)\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n        <Box>\r\n            <Title className='red'>제품 상세</Title>\r\n            {/* <Title color='blue'>제품 상세</Title>\r\n            <Title color='blue'>제품 상세</Title> */}\r\n        </Box>\r\n\r\n        {\r\n            alert === true\r\n            ? <InfoMessage></InfoMessage>\r\n            : null\r\n            \r\n        }\r\n        \r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <img src={\"https://dongmyounglee.github.io/img/ring0\"+ (c_pro.id+1) +\".png\"} width=\"90%\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-4\">\r\n                <h4 className=\"pt-5\">{c_pro.title}</h4>\r\n                <p>{c_pro.content}</p>\r\n                <p>가격 : {c_pro.price}</p>\r\n\r\n                {\r\n                    soldOut === true\r\n                    ? <Info item={props.item[c_pro.id]}></Info>\r\n                    : <SoldOut></SoldOut>\r\n                }\r\n                \r\n                <button className=\"btn btn-danger\" onClick={() => {\r\n                    // console.log(testItem)\r\n                    let copy1 = []\r\n                    props.item.map(x => {\r\n                        copy1.push(x - 1)\r\n                    })\r\n                    if (props.item[c_pro.id] === 1) {\r\n                        setSoldOut(false)\r\n                    }\r\n                    \r\n                    props.setItem(copy1)\r\n\r\n                    props.dispatch({\r\n                        type : 'cartAdd',\r\n                        payload : {id : c_pro.id, name : c_pro.title, quan : 1}\r\n                    })\r\n                    history.push('/cart')\r\n                }}>장바구니담기</button> \r\n                <button className=\"btn btn-danger\" onClick={() => {\r\n                    history.push('/')\r\n                }}>뒤로가기</button>\r\n                <div style={{marginTop : '20px', cursor : 'pointer'}}>\r\n                  <p>최근 본 상품이 아래에 표시 됩니다.</p>\r\n                  {\r\n                    storageItem === null\r\n                    ? null\r\n                    : storageItem.map((item, index) => {\r\n                          return (\r\n                            <div key={index} onClick={() => {\r\n                              history.push(item)\r\n                            }}>\r\n                              <img style={{width : '50px'}} src={'https://dongmyounglee.github.io/img/ring0' + (Number(item)+1) + '.png'}></img>\r\n                              <div>{props.product[item].title}</div>\r\n                            </div>\r\n                          ) \r\n                        })\r\n                      }  \r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n          <Nav.Item>\r\n              <Nav.Link eventKey=\"link-0\" onClick={() => {\r\n                setSwicthBtn(false)\r\n                setTap(0)\r\n              }}>상품설명</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n              <Nav.Link eventKey=\"link-1\" onClick={() => {\r\n                setSwicthBtn(false)\r\n                setTap(1)\r\n              }}>배송정보</Nav.Link>\r\n          </Nav.Item>\r\n        </Nav> \r\n        \r\n        <CSSTransition in={swicthBtn} classNames=\"wow\" timeout={500}>\r\n          <TapContent tap={tap} setSwicthBtn={setSwicthBtn}/>\r\n        </CSSTransition>\r\n        \r\n    </div>\r\n    )   \r\n}\r\n\r\nfunction TapContent(props) {\r\n  \r\n  useEffect(() => {\r\n    props.setSwicthBtn(true)\r\n  })\r\n\r\n  if (props.tap === 0) {\r\n    return <div>0번째 내용</div>\r\n  } else if (props.tap === 1) {\r\n    return <div>1번째 내용</div>\r\n  } else if (props.tap === 2) {\r\n    return <div>2번째 내용</div>\r\n  }\r\n}\r\n\r\nfunction Info(props) {\r\n    return (\r\n        <p>재고 : {props.item} 개</p>\r\n    )\r\n}\r\n\r\nfunction SoldOut() {\r\n    return (\r\n        <p>품절 입니다.</p>\r\n    )\r\n}\r\n\r\nfunction InfoMessage() {\r\n    return (\r\n        <div className=\"my-alert\">\r\n            <p>즉시 출고 가능 재고 2 개 남았습니다.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n// class DetailPage2 extends React.Component {\r\n    \r\n//     // 렌더링 될때\r\n//     componentDidMount() {\r\n\r\n//     }\r\n\r\n//     // 사라질 때\r\n//     componentWillUnmount() {\r\n\r\n//     }\r\n// }\r\n\r\n\r\nfunction storeData(state) {\r\n    return {\r\n      stateData : state.reducer,\r\n      alertOpen : state.reducer2\r\n    }\r\n  }\r\n  \r\nexport default connect(storeData)(DetailPage)"],"names":["Box","styled","Title","props","color","TapContent","useEffect","setSwicthBtn","tap","Info","item","SoldOut","InfoMessage","className","connect","state","stateData","reducer","alertOpen","reducer2","useState","alert","setAlert","soldOut","setSoldOut","useContext","ItemContext","setTap","swicthBtn","JSON","parse","localStorage","getItem","storageItem","timer","setTimeout","clearTimeout","arr","push","id","Set","setItem","stringify","useParams","history","useHistory","c_pro","product","find","src","width","title","content","price","onClick","copy1","map","x","dispatch","type","payload","name","quan","style","marginTop","cursor","index","Number","Nav","variant","defaultActiveKey","eventKey","CSSTransition","in","classNames","timeout"],"sourceRoot":""}