{"version":3,"file":"static/js/928.7884a773.chunk.js","mappings":"sRAaIA,EAAMC,EAAAA,GAAAA,IAAH,0CAGHC,EAAQD,EAAAA,GAAAA,GAAH,2DAEE,SAACE,GAAD,OAAWA,EAAMC,SAgH5B,IAAMC,EAAKJ,EAAAA,GAAAA,GAAH,6CAIR,SAASK,EAAWH,GAKlB,OAJAI,EAAAA,EAAAA,YAAU,WACRJ,EAAMK,cAAa,MAGH,IAAdL,EAAMM,KAEN,gBAAKC,MAAO,CAAEC,SAAU,GAAIC,UAAW,IAAvC,SACGC,EAAAA,EAAKV,EAAMW,KAAKC,IAAIC,OAGF,IAAdb,EAAMM,KAEb,0BACE,2BACE,SAACJ,EAAD,UAAKQ,EAAAA,EAAKV,EAAMW,KAAKC,IAAIE,WACzB,SAACZ,EAAD,UAAKQ,EAAAA,EAAKV,EAAMW,KAAKC,IAAIG,WACzB,SAACb,EAAD,UAAKQ,EAAAA,EAAKV,EAAMW,KAAKC,IAAII,WACzB,SAACd,EAAD,UAAKQ,EAAAA,EAAKV,EAAMW,KAAKC,IAAIK,WACzB,SAACf,EAAD,UAAKQ,EAAAA,EAAKV,EAAMW,KAAKC,IAAIM,WACzB,SAAChB,EAAD,UAAKQ,EAAAA,EAAKV,EAAMW,KAAKC,IAAIO,oBAT1B,EAoDT,OAAeC,EAAAA,EAAAA,KAPf,SAAmBC,GACjB,MAAO,CACLC,UAAWD,EAAME,QACjBC,UAAWH,EAAMI,YAIrB,EAhLA,SAAoBzB,GAClB,OAA4B0B,EAAAA,EAAAA,WAAS,GAArC,eAIA,GAJA,WAEeC,EAAAA,EAAAA,YAAWC,EAAAA,IAENF,EAAAA,EAAAA,UAAS,IAA7B,eAAKpB,EAAL,KAAUuB,EAAV,KACA,GAAgCH,EAAAA,EAAAA,WAAS,GAAzC,eAAKI,EAAL,KAAgBzB,EAAhB,KACA,GAAoCqB,EAAAA,EAAAA,UAClCK,KAAKC,MAAMC,aAAaC,QAAQ,aADlC,0BAKA9B,EAAAA,EAAAA,YAAU,WAIR,IAAI+B,EAAQC,YAAW,WACrBC,UAAS,KACR,KACH,OAAO,WACLC,aAAaH,MAEd,CAACI,SAEJnC,EAAAA,EAAAA,YAAU,WACR,IAAIoC,EAAMP,aAAaC,QAAQ,YAE7BM,EADU,OAARA,EACI,GAEAT,KAAKC,MAAMQ,IAEfC,KAAK7B,GACT4B,EAAM,IAAIE,IAAIF,GACdA,GAAG,OAAOA,GAEVP,aAAaU,QAAQ,UAAWZ,KAAKa,UAAUJ,MAC9C,IAEH,IAAM5B,GAAOiC,EAAAA,EAAAA,MAAPjC,GACFkC,GAAUC,EAAAA,EAAAA,MACVC,EAAQhD,EAAMiD,QAAQC,MAAK,SAACC,GAAD,OAAUA,EAAKvC,IAAMA,KAEpD,OACE,iBAAKwC,UAAU,YAAf,WACE,SAACvD,EAAD,WACE,SAACE,EAAD,CAAOqD,UAAU,MAAjB,gDAKF,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,WAAf,UACE,gBACEC,IACE,gDACCL,EAAMpC,GAAK,GACZ,OAEF0C,MAAM,WAGV,iBAAKF,UAAU,gBAAf,WACE,eAAIA,UAAU,OAAd,SAAsBJ,EAAMO,SAC5B,uBAAIP,EAAMQ,WACV,cAAGC,KAAM/C,EAAAA,EAAKsC,EAAMpC,IAAI8C,IAAKC,OAAO,SAApC,UACE,mBAAQP,UAAU,iBAAlB,yCAEF,mBACEA,UAAU,iBACVQ,QAAS,WACPd,EAAQL,KAAK,MAHjB,6CAUJ,UAACoB,EAAA,EAAD,CAAKT,UAAU,OAAOU,QAAQ,OAAOC,iBAAiB,SAAtD,WACE,SAACF,EAAA,OAAD,WACE,SAACA,EAAA,OAAD,CACEG,SAAS,SACTJ,QAAS,WACPvD,GAAa,GACbwB,EAAO,IAJX,gDAUF,SAACgC,EAAA,OAAD,WACE,SAACA,EAAA,OAAD,CACEG,SAAS,SACTJ,QAAS,WACPvD,GAAa,GACbwB,EAAO,IAJX,mDAYJ,SAACoC,EAAA,EAAD,CAAeC,GAAIpC,EAAWqC,WAAW,MAAMC,QAAS,IAAxD,UACE,SAACjE,EAAD,CAAYG,IAAKA,EAAKD,aAAcA,EAAcM,KAAMqC","sources":["Detail.js"],"sourcesContent":["/* eslint-disable */\r\n\r\nimport axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"./Detail.scss\";\r\nimport { ItemContext } from \"./App.js\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport Data from \"./data.js\";\r\n\r\nlet Box = styled.div`\r\n  padding: 20px;\r\n`;\r\nlet Title = styled.h4`\r\n  font-size: 25px;\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nfunction DetailPage(props) {\r\n  let [soldOut, setSoldOut] = useState(true);\r\n  // 다른 js 파일로 useContext 실행한 테스트\r\n  let testItem = useContext(ItemContext);\r\n\r\n  let [tap, setTap] = useState(0);\r\n  let [swicthBtn, setSwicthBtn] = useState(false);\r\n  let [storageItem, setStorageItem] = useState(\r\n    JSON.parse(localStorage.getItem(\"watched\"))\r\n  );\r\n\r\n  // DetailPage 등장할때 실행\r\n  useEffect(() => {\r\n    // axios.get() -> DetailPage 가 등장했을때 ajax 요청\r\n    // 끝에 빈 대괄호 써줘야함.\r\n\r\n    let timer = setTimeout(() => {\r\n      setAlert(false);\r\n    }, 2000);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [alert]); // -> alert 라는 state가 update 할때만 useEffect 실행\r\n\r\n  useEffect(() => {\r\n    let arr = localStorage.getItem(\"watched\");\r\n    if (arr === null) {\r\n      arr = [];\r\n    } else {\r\n      arr = JSON.parse(arr);\r\n    }\r\n    arr.push(id);\r\n    arr = new Set(arr);\r\n    arr = [...arr];\r\n\r\n    localStorage.setItem(\"watched\", JSON.stringify(arr));\r\n  }, []);\r\n\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n  let c_pro = props.product.find((item) => item.id == id);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Box>\r\n        <Title className=\"red\">작업물 상세</Title>\r\n        {/* <Title color='blue'>제품 상세</Title>\r\n            <Title color='blue'>제품 상세</Title> */}\r\n      </Box>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img\r\n            src={\r\n              \"https://dongmyounglee.github.io/port/project\" +\r\n              (c_pro.id + 1) +\r\n              \".png\"\r\n            }\r\n            width=\"90%\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{c_pro.title}</h4>\r\n          <p>{c_pro.content}</p>\r\n          <a href={Data[c_pro.id].url} target=\"_blank\">\r\n            <button className=\"btn btn-danger\">바로가기</button>\r\n          </a>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            뒤로가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-0\"\r\n            onClick={() => {\r\n              setSwicthBtn(false);\r\n              setTap(0);\r\n            }}\r\n          >\r\n            작업물 설명\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-1\"\r\n            onClick={() => {\r\n              setSwicthBtn(false);\r\n              setTap(1);\r\n            }}\r\n          >\r\n            적용한 기술\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      <CSSTransition in={swicthBtn} classNames=\"wow\" timeout={500}>\r\n        <TapContent tap={tap} setSwicthBtn={setSwicthBtn} cPro={c_pro} />\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Li = styled.li`\r\n  list-style: none;\r\n`;\r\n\r\nfunction TapContent(props) {\r\n  useEffect(() => {\r\n    props.setSwicthBtn(true);\r\n  });\r\n\r\n  if (props.tap === 0) {\r\n    return (\r\n      <div style={{ fontSize: 18, marginTop: 10 }}>\r\n        {Data[props.cPro.id].info}\r\n      </div>\r\n    );\r\n  } else if (props.tap === 1) {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          <Li>{Data[props.cPro.id].info2_1}</Li>\r\n          <Li>{Data[props.cPro.id].info2_2}</Li>\r\n          <Li>{Data[props.cPro.id].info2_3}</Li>\r\n          <Li>{Data[props.cPro.id].info2_4}</Li>\r\n          <Li>{Data[props.cPro.id].info2_5}</Li>\r\n          <Li>{Data[props.cPro.id].info2_6}</Li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Info(props) {\r\n  return <p>재고 : {props.item} 개</p>;\r\n}\r\n\r\nfunction SoldOut() {\r\n  return <p>품절 입니다.</p>;\r\n}\r\n\r\nfunction InfoMessage() {\r\n  return (\r\n    <div className=\"my-alert\">\r\n      <p>즉시 출고 가능 재고 2 개 남았습니다.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\n// class DetailPage2 extends React.Component {\r\n\r\n//     // 렌더링 될때\r\n//     componentDidMount() {\r\n\r\n//     }\r\n\r\n//     // 사라질 때\r\n//     componentWillUnmount() {\r\n\r\n//     }\r\n// }\r\n\r\nfunction storeData(state) {\r\n  return {\r\n    stateData: state.reducer,\r\n    alertOpen: state.reducer2,\r\n  };\r\n}\r\n\r\nexport default connect(storeData)(DetailPage);\r\n"],"names":["Box","styled","Title","props","color","Li","TapContent","useEffect","setSwicthBtn","tap","style","fontSize","marginTop","Data","cPro","id","info","info2_1","info2_2","info2_3","info2_4","info2_5","info2_6","connect","state","stateData","reducer","alertOpen","reducer2","useState","useContext","ItemContext","setTap","swicthBtn","JSON","parse","localStorage","getItem","timer","setTimeout","setAlert","clearTimeout","alert","arr","push","Set","setItem","stringify","useParams","history","useHistory","c_pro","product","find","item","className","src","width","title","content","href","url","target","onClick","Nav","variant","defaultActiveKey","eventKey","CSSTransition","in","classNames","timeout"],"sourceRoot":""}